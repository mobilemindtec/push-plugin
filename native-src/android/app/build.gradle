apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.1'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {

    def androidXLegacyVersion = "1.0.0"
    if (project.hasProperty("androidXLegacy")) {
        androidXLegacyVersion = androidXLegacy
    }

    def androidXAppCompatVersion = "1.0.2"
    if (project.hasProperty("androidXAppCompat")) {
        androidXAppCompatVersion = androidXAppCompat
    }

    def androidXMaterialVersion = "1.0.0"
    if (project.hasProperty("androidXMaterial")) {
        androidXMaterialVersion = androidXMaterial
    }

    implementation "androidx.appcompat:appcompat:$androidXAppCompatVersion"
    //implementation "com.google.android.material:material:$androidXMaterialVersion"

    //implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    //implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-messaging:21.0.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

task deleteOldJar(type: Delete) {
    delete 'build/outputs/aar/pushplugin.aar'
}


task exportJar(type: Copy) {
        from('build/outputs')
    into('aar')
    include('app-release.aar')
    // name the plugin
    rename('app-release.aar','pushplugin.aar')
}

exportJar.dependsOn(deleteOldJar, build)